{"version":3,"sources":["fields/editor/scripts.js"],"names":["window","document","$","AO","create_editors","$editors","$editor","each","i","el","settings","init_instance_callback","extend","tinymce","tweak_editor_settings","attr","$container","editorContainer","editor","addClass","before","concat","id","min_height","hasClass","init","removeClass","on","e","preventDefault","destroy_editors","$el","tmcEditor","get","selfHeight","val","closest","editorWidth","save_editors","$field","outerHeight","editorHeight","prev","width","height","removeAttr","destroy","tweakedSettings","initialSettings","next","key","newVal","replace","get_editor_value","value","Promise","resolve","filter","length","$area","getContent","type","jQuery"],"mappings":"AAAA,cAEA,SAACA,EAAAC,EAAAC,GACGF,EAAAG,GAAYH,EAAAG,IAAZ,GAGIC,GAAAA,QAAAA,CACIC,eAAc,SAAAA,GACJC,EAAOC,KAAI,SAAjBC,EAAAC,GACMC,IAAQJ,EAAYJ,EAATO,GACbE,EAAsBT,EAAEU,OAAA,GAAAT,GAAAU,QAAAC,sBAAUR,EAAAS,KAAA,OAAA,CACxBC,uBAAsBC,SAAAA,GAA5B,IAAMD,EAAad,EAAEgB,EAAOD,iBAGbE,EAAS,IASvBH,EAAAG,SAAA,uBAAAC,OAAA,eAAAC,OAd6EH,EAAAI,GAc7E,2GAAAD,OAEOH,EAAAI,GAFP,4JAAAD,OAdTH,EAAAI,GAcS,sOAhBbC,WAAA,MA+ByB,oBAAXV,SAAWP,EAAAkB,SAAA,mBACPf,QAAdgB,KAAAf,GAGIgB,EAAYP,SAAA,iBAAhBQ,GAAA,YAAA,SAAAC,GAVQA,EAAEC,uBAMdC,gBAAA,SAAAzB,GAjCKA,EAAAE,KAAA,SAAAC,EAAAC,GAAA,IAAAsB,EAAA7B,EAAAO,GA+CSuB,EAAIvB,QAAOwB,IAAAF,EAAAhB,KAAA,OAVrBgB,EAAIL,YAAY,iBAcAM,IACNE,EAAUC,IAAG7B,EAAQ8B,cAErBC,EAAc/B,cAMvBgC,aA3DTlC,SA2DSC,GAbLA,EAAAE,KAAA,SAAAC,EAAAC,GA/CK,IAAAH,EAAAJ,EAAAO,GAgEIF,GAAKD,EAAAkB,SAAW,kBAAA,oBAAAX,QAAA,CACR,IAAI0B,EAAjBjC,EAAA8B,QAAA,kBACe9B,EAAgBA,EAAA8B,QAA/B,kBAAAI,cAbUC,EAAenC,EAAQoC,KAAK,gBAAgBF,cAe3ChB,EAASlB,EAAhBoC,KAAyCpC,gBAAAqC,QAIhCpB,EAAAA,KAAa,iBAAtBqB,OAAAH,GAAAE,MAAAN,GACQZ,EAAKf,OAAbwB,GAAAf,SAAA,sBAGO0B,QAAWZ,IAAA3B,EAASoB,KAAAA,OAAYoB,cAInDhC,gBA/EAV,SA+EAU,GACUiC,EAAAA,KAAe,SAAAvC,EAArBC,GAEUI,IAAAA,EAAQmC,EAAAA,GACDb,EAAb7B,EAAA8B,QAAA,kBAEI,GAAAG,EAAaf,SAAjB,uBAA8BlB,EAAAkB,SAAA,kBAAA,oBAAAX,QAAA,CAE7B,IAAAH,EAAAP,GAAAU,QAAAC,sBAAAR,EAAAS,KAAA,OAEDgC,EAAAxB,WAAA,IAPJV,QAAAY,KAAAf,GAWHJ,EAAA2C,KAAA,iBAAAJ,WAAA,SA9FLN,EAAAM,WAAA,SAAAnB,YAAA,0BAoGQrB,sBAAc,SAAAiB,GACdjB,IAAWA,EAAgB,GAR3B,OAQAH,EAAAK,KAAAJ,GAAAU,QAAAmC,gBAAA,SAAAE,EAAAf,GAIC,IAADgB,EAAehB,EAAf,iBAAAA,IAGHgB,EAAAhB,EAAAiB,QAAA,sBAAA9B,IAGF+B,EAAmBH,GAAMC,IAlBbJ,IA0BPO,EAAAA,WACH,IAAAjD,EAAAH,EAAA,oBAEMqD,EAAQC,KACXnD,EADoBA,EAAAoD,OAAA,SAAAjD,EAAAC,GAAA,OAAA,IAAAP,EAAAO,GAAA2B,QAAA,aAAAsB,SAX5BxD,EAAAD,GAAA0B,GAAA,sBAAA,WAiBO1B,GAnIXY,QAAAT,eAAAC,QAkHIF,GAAGkD,iBAAmB,SAAA/B,GAClB,IAAMqC,EAAQzD,EAAC,IAAAmB,OAAKC,IAEhBgC,EAAQ,GAQZ,OALIA,EADAK,EAAMnC,SAAS,kBAA0C,oBAAdX,QACnCA,QAAQoB,IAAIX,GAAIsC,aAEhBD,EAAMxB,MAGXoB,QAAQC,QAAS,CACpBK,KAAQ,SACRvC,GAAMA,EACNgC,MAASA,KAhIrB,CAmIGtD,OAAQC,SAAU6D","file":"fields\\editor\\scripts.min.js","sourcesContent":["\"use strict\";\r\n\r\n(function(window, document, $){\r\n    window.AO = window.AO || {};\r\n\r\n    AO.tinymce = {\r\n        create_editors: $editors => {\r\n            $editors.each((i, el) => {\r\n                const $editor = $(el);\r\n                const settings = $.extend({}, AO.tinymce.tweak_editor_settings( $editor.attr('id') ), {\r\n                    init_instance_callback: editor => {\r\n                        const $container = $(editor.editorContainer);\r\n\r\n                        if( $container[0] ) {\r\n                            $container.addClass('wp-editor-container').before(\r\n                                `<div id=\"wp-${editor.id}-editor-tools\" class=\"wp-editor-tools hide-if-no-js\">\r\n                                    <div id=\"wp-${editor.id}-media-buttons\" class=\"wp-media-buttons\">\r\n                                    <button type=\"button\" class=\"button insert-media add_media\" data-editor=\"${editor.id}\">\r\n                                    <span class=\"wp-media-buttons-icon\"></span> Add Media\r\n                                    </button>\r\n                                    </div>\r\n                                </div>`);\r\n\r\n                        }\r\n                    },\r\n                    min_height: 250\r\n                });\r\n\r\n                if( typeof tinymce !== 'undefined' && ! $editor.hasClass('tinymce--init') ) {\r\n                    tinymce.init(settings);\r\n\r\n                    $editor.addClass('tinymce--init').on('mousedown', function (e) {\r\n                        e.preventDefault();\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        destroy_editors: $editors => {\r\n            $editors.each((i, el) => {\r\n                const $el = $(el);\r\n                const tmcEditor = tinymce.get($el.attr('id'));\r\n\r\n                $el.removeClass('tinymce--init');\r\n\r\n                if( tmcEditor ) {\r\n                    $el.val(tmcEditor.getContent());\r\n\r\n                    tmcEditor.destroy();\r\n                }\r\n            });\r\n        },\r\n        save_editors($editors) {\r\n            $editors.each((i, el) => {\r\n                const $editor = $(el);\r\n\r\n                if( $editor.hasClass('tinymce--init') && typeof( tinymce ) !== 'undefined' ) {\r\n                    const $field = $editor.closest('.field--editor');\r\n                    const selfHeight = $editor.closest('.field--editor').outerHeight();\r\n                    const editorHeight = $editor.prev('.mce-tinymce').outerHeight();\r\n                    const editorWidth = $editor.prev('.mce-tinymce').width();\r\n\r\n                    $editor.next('.field__cover').height(editorHeight).width(editorWidth);\r\n                    $field.height(selfHeight).addClass('tinymce--destroyed');\r\n\r\n                    tinymce.get($editor.attr('id')).destroy();\r\n                }\r\n            });\r\n        },\r\n        restore_editors($editors) {\r\n            $editors.each((i, el) => {\r\n                const $editor = $(el);\r\n                const $field = $editor.closest('.field--editor');\r\n\r\n                if( $field.hasClass('tinymce--destroyed') && $editor.hasClass('tinymce--init') && typeof( tinymce ) !== 'undefined' ) {\r\n\r\n                    const settings = AO.tinymce.tweak_editor_settings($editor.attr('id'));\r\n\r\n                    settings.min_height = 250;\r\n                    tinymce.init(settings);\r\n\r\n                    $editor.next('.field__cover').removeAttr('style');\r\n                    $field.removeAttr('style').removeClass('tinymce--destroyed');\r\n                }\r\n            });\r\n        },\r\n        tweak_editor_settings: id => {\r\n            const tweakedSettings = {};\r\n\r\n            $.each(AO.tinymce.initialSettings, (key, val) => {\r\n                let newVal = val;\r\n\r\n                if( 'string' === typeof val ) {\r\n                    newVal = val.replace('alchemy-temp-editor', id);\r\n                }\r\n\r\n                tweakedSettings[key] = newVal;\r\n            });\r\n\r\n            return tweakedSettings;\r\n        }\r\n    };\r\n\r\n    $(() => {\r\n        let $editors = $('.jsAlchemyEditor');\r\n\r\n        if( $editors[0] ) {\r\n            $editors = $editors.filter((i, el) => {\r\n                return $(el).closest('.repeatee').length === 0\r\n            });\r\n\r\n            $(document).on('tinymce-editor-init', () => {\r\n                AO.tinymce.create_editors($editors);\r\n            });\r\n        }\r\n    });\r\n\r\n    AO.get_editor_value = id => {\r\n        const $area = $(`#${id}`);\r\n\r\n        let value = '';\r\n\r\n        if( $area.hasClass('tinymce--init') && typeof( tinymce ) !== 'undefined' ) {\r\n            value = tinymce.get(id).getContent();\r\n        } else {\r\n            value = $area.val()\r\n        }\r\n\r\n        return Promise.resolve( {\r\n            'type': 'editor',\r\n            'id': id,\r\n            'value': value\r\n        } );\r\n    };\r\n})(window, document, jQuery);"]}