{"version":3,"sources":["fields/checkbox_image/scripts.js"],"names":["window","$","AO","$checkboxImages","each","i","el","$labels","$el","find","isMultiple","data","filter","multiple","attr","hasClass","$label","e","preventDefault","this","toggleClass","is","removeClass","prev","prop","on","inArray","which","id","get_checkbox_image_value","concat","value","Promise","resolve","map","checkbox","type","jQuery"],"mappings":"AAAA,cAEA,SAACA,EAAAC,GACGD,EAAAE,GAAYF,EAAAE,IAAZ,GAEA,IAAMC,EAAkBF,EAAE,2BAGtBE,EAAA,IACIA,EAAAC,KAAA,SAAAC,EAAAC,GACMC,IAAOC,EAAOC,EAAAA,GACdC,EAAiBC,EAAKF,KAAA,SAEpBG,EAAQP,EAAGC,KAAO,WAAAO,SAEvBC,EAAKF,OAFR,SAAAP,EAAAC,GAIS,OAASQ,EAAAA,GAAKC,SAAvB,+BAEOD,KAAP,WAAgB,GAGNE,EAAAA,KAASf,SAAfa,KAAA,YAAA,GAEIE,EAAAA,GAAOD,QAAU,+BAAgC,SAAAE,GACjDA,EAAAC,iBAHJ,IAAMF,EAASf,EAAEkB,MAOLP,EAAOG,SAAA,+BADbL,GAMCU,EAAYR,OAAA,SAAAP,EAAAC,GAfvB,OAAAL,EAAAK,GAAAe,GAAAL,KAkBAM,YAAmB,2BAAgCC,KAASN,SAAEO,KAAA,WAAA,GAGtDR,EAAOD,YAAU,2BAAgCQ,KAAA,SAAAC,KAAA,UAAAR,EAAAD,SAAA,+BAHzDP,EAAIiB,GAAG,WAAY,+BAAgC,SAASR,GAOlDS,IAAST,EAAShB,EAACkB,MAGdC,EAAAA,SAAY,+BAIlC,IAAAnB,EAAAyB,QAAAT,EAAAU,MAAA,CAAA,GAAA,OANeV,EAAEC,iBASDF,EAAKY,YAAlB,2BAAAL,KAAA,SAAAC,KAAA,UAAAR,EAAAD,SAAA,iCAOKb,GAFO2B,yBAAR,SAAAD,GADJ,IAIOpB,EAAAP,EAAA,IAAA6B,OAAAF,IAENG,EAAA,GAED,OACIA,EADGC,EAAAA,KAAQC,WAASpB,SACZL,EAAAC,KAAA,YADYyB,IAAA,SAAA7B,EAAA8B,GAAA,OAAAlC,EAAAkC,GAAAxB,KAAA,WAGXoB,MAhBjBvB,EAAAC,KAAA,YAAAE,KAAA,SAaWqB,QAAQC,QAAS,CACpBG,KAAQ,iBACRR,GAAMA,EACNG,MAASA,KAnErB,CAsEG/B,OAAQqC","file":"fields\\checkbox_image\\scripts.min.js","sourcesContent":["\"use strict\";\n\n(function(window, $) {\n    window.AO = window.AO || {};\n\n    const $checkboxImages = $('.jsAlchemyCheckboxImage');\n\n    if( $checkboxImages[0] ) {\n        $checkboxImages.each((i, el) => {\n            const $el = $(el);\n            const $labels = $el.find('label');\n            const isMultiple = $el.data('alchemy').multiple;\n\n            $labels.filter((i, el) => {\n                return ! $(el).hasClass('checkbox__label--disabled')\n            }).attr('tabindex', 0);\n\n            $el.find('input').attr('tabindex', -1);\n\n            $el.on('click', '.jsAlchemyCheckboxImageLabel', function(e){\n                e.preventDefault();\n\n                const $label = $(this);\n\n                if( $label.hasClass( 'checkbox__label--disabled' ) ) {\n                    return;\n                }\n\n                if( ! isMultiple ) {\n                    $labels.filter((i, el) => {\n                        return ! $(el).is($label)\n                    }).removeClass('checkbox__label--active').prev('input').prop('checked', false);\n                }\n\n                $label.toggleClass('checkbox__label--active').prev('input').prop('checked', $label.hasClass( 'checkbox__label--active' ));\n            });\n\n            $el.on('keypress', '.jsAlchemyCheckboxImageLabel', function(e){\n                const $label = $(this);\n\n                if( $label.hasClass( 'checkbox__label--disabled' ) ) {\n                    return;\n                }\n\n                if( $.inArray( e.which, [13, 32] ) !== -1 ) {\n                    e.preventDefault();\n\n                    $label.toggleClass('checkbox__label--active').prev('input').prop('checked', $label.hasClass( 'checkbox__label--active' ));\n                }\n            });\n        });\n    }\n\n    AO.get_checkbox_image_value = id => {\n        const $el = $(`#${id}`);\n\n        let value = '';\n\n        if( $el.data('alchemy').multiple ) {\n            value = $el.find(':checked').map((i, checkbox) => {\n                return $(checkbox).data('value');\n            }).get();\n        } else {\n            value = $el.find(':checked').data('value');\n        }\n\n        return Promise.resolve( {\n            'type': 'checkbox_image',\n            'id': id,\n            'value': value\n        } );\n    };\n})(window, jQuery);"]}