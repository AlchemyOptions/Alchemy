{"version":3,"sources":["fields/repeater/scripts.js"],"names":["window","document","$","correct_ids","alchemy","values","hasTypes","Promise","then","each","i","repeatee","jQuery","l","item","type","meta","id","neededTypeFields","fields","k","value","$parent","data","AO","$repeaters","addRepeateeData","AlchemyRepeatersData","cloneRepeateeData","miscRepeaterData","currentUrl","searchParams","get","href","pageID","$repeateesContainer","repeateesCount","$repeater","children","$trigger","length","e","repeaterData","this","next","FormData","attr","removeClass","append","nonce","processData","title","success","ajax","response","$response","$editors","contentType","tinymce","create_editors","find","click","$document","$toolbar","closest","addClass","$repeatee","$editorFields","hasClass","fadeOut","destroy_editors","remove","stopPropagation","handle_hide_repeatee","_this","toggleClass","repeater","$repeatees","map","metaData","repeateeMeta","visible","repeateeFields","extend","field","Function","concat","all","label","after","JSON","stringify","method","url","dataType","complete","removeAttr","on","$list","siblings","one","event","save_editors","placeholder","select2","$input","val","text","sortable","axis","ui","height","helper","stop","disableSelection","option","params","change","blur","get_repeater_value","filter","resolve","valuesData"],"mappings":"AAAA,cAEA,SAACA,EAAAC,EAAAC,GAqWuC,SAAxBC,EAAAC,EAAAC,GADJ,IAAAC,OAAA,IAAAF,EAAA,eAAA,eAQGG,EAAoBC,EAAK,eAALA,OA5B3B,OA8BQN,EAAAO,KAAAJ,EAAA,SAAAK,EAAAC,GADoBL,GAOzBL,EAAAA,KAAUW,EApXrB,eAAA,eAAA,SAAAC,EAAAC,GAqUwBA,EAAKC,OAASJ,EAASK,KAAKC,KAC5BC,EAAmBJ,EAAKK,UAIhCjB,EAAEO,KAAKE,EAASN,OAAQ,SAACe,EAAGC,GACxBA,EAAK,GAASH,EAAiBE,GAAjB,MAqClBlB,EAASC,KAAAA,EAAamB,OAAQC,SAARH,EAAaC,GAHvCA,EAAA,GAAAH,EAAAE,GAAA,OA7BGf,EA/UXL,EAAAwB,GAAYxB,EAAAwB,IAAZ,GAGItB,EAAA,WAAA,IAAMuB,EAAavB,EAAE,2BAGjB,GAAAuB,EAAA,GAAA,CAIEC,IAAAA,EAAkBC,EAAAA,GAClBC,EAAoBD,qBAAqB,gBACzCE,EAAmBF,qBAAzB,kBACMG,EAAqB9B,qBAA3B,KAEU8B,EAAa,IAACC,IAAAA,EAAaC,SAAxBC,MAEPC,EAASJ,EAAAC,aAAAC,IAAA,QACXE,EACHA,GADYJ,EAAWC,aAAaC,IAAI,QAKrCP,EAAMU,KAAAA,SAAAA,EAAAA,GAEFC,IAAAA,EAAiBD,EAAAA,GAErBA,EAAsBE,EAAAC,SAAyB,mBAAWA,SAAA,2BAGhDC,EAANJ,EAAAG,SAAA,sBAAAE,OAEMpC,EAAUiC,GAAAA,QAAUd,wBAA1B,SAAAkB,GACMC,EAAAA,kBAEI,IAAGH,EAAbrC,EAAAyC,MAEcN,EAAYE,EAAMK,QAAK,2BAEzBxC,EAAYsB,EAAAA,KAAe,WAC3BgB,EAAZH,EAAAhB,KAAA,YACYY,EAAsBC,EAAAA,SAAlC,mBAAAE,SAAA,2BACYf,EAAMnB,IAAOyC,SALzBN,EAASO,KAAK,YAAY,GAAMF,KAAK,4BAA4BG,YAAY,4BASpEC,EAALA,OAAY,WAAWN,EAAvBO,OACKD,EAALA,OAAY,UAAcN,GAC7BnB,EAAAyB,OAAA,qBAAAZ,GANDb,EAAKyB,OAAO,KAAM5C,EAAO,IAQlBmB,EAAAyB,OAAA,cAAA5C,EAAA,gBAEEsB,GAFFgB,EAAA,OAGOnB,EAAAyB,OAHP,UAAAN,EAAA,KAAAzB,IAIHiC,EAAaF,OAJV,aAAAN,EAAA,KAAAS,QAOHC,EAAOC,KAAE,CACDC,OAASF,OACHG,IAAAA,EAAuBhC,IACvBiC,SAAWD,OAEjBpB,aAAmB,EAP3BsB,aAAa,EASDD,KAAQjC,EACLmC,QAAQC,SAAAA,GACd,GAAAL,EAAAF,SAAAE,EAAA/B,KAAA,CACJ,IAAAgC,EAAArD,EAAAoD,EAAA/B,MAjBFiC,EAAAD,EAAAjB,SAAA,qBAAAA,SAAA,kBAAAsB,KAAA,oBAoBCzB,EAAAa,OAAAO,GAEHC,EAAA,IAtBLhC,GAAAkC,QAAAC,eAAAH,KA6BUK,SAAV,WAEkBC,EAAlBD,QACkBE,EAASC,WAAS,YAApCpB,KAAA,4BAAAqB,SAAA,iCAMIC,EAAUnB,GAAAA,QAAY,4BAAtB,SAAAN,GACA0B,EAAAA,kBAEGT,EAAQC,QAGd,IAlBLO,EAkBKhE,EAAAyC,MAlBLqB,QAAA,aAqBaG,EAASD,EAAA5B,SAA4B,qBAAWA,SAAA,kBAE5C4B,EAAWE,SAAU,uBAE1BC,GAARX,QAAgBY,gBAAMH,EAAAP,KAAA,qBAAtBM,EAAAnB,YAAA,sBAJJoB,EAAAP,KAAA,oBAAAW,WAS8D/C,GAAAkC,QAAAC,eAAAQ,EAAAP,KAAA,qBACxDY,EAAFP,SAAA,yBAKA5B,EAAQE,GAAShB,QAAK,2BAAtB,WACS,IACDkD,EADJvE,EAAAyC,MACwBqB,QAAYE,aAbxC5C,EAAQ+C,QAAQ,WAeP/C,EAALiD,aAKQlC,EAAMA,GAAAA,QAAYE,2BAAiB,SAAAE,GAAnC,IAAAiC,EAAA/B,KACAF,EAAMrC,kBAGNmC,IAmOL2B,EAdK3B,EAAM2B,EACpBzC,EAtNsBc,EAAMrC,EAAAyC,MAETK,EAAOT,EAAYX,QAAAA,aAExBL,OAAKyB,EAAOzB,KAAA,WACPyB,IAAL,OAgNAT,EA/M2BnC,EAgNzCqB,GADoByC,EA/M6BA,GAgNlC3C,KAAA,QAEjBgB,EAASoC,YAAOC,yBADpBrC,EAAAqB,KAAA,QAAAe,YAAA,wBAAAA,YAAA,oBAMMtE,EAASwE,WAAWC,SAAIH,YAAIhE,oBAE9BoE,EAAMC,aAAed,IAArBa,EAAAE,UAAAF,EAAAE,QAvNsBC,MACI9E,IAAAA,SAEC,WAHXqC,EAAA+B,kBAOkB,IAACW,EAAWjB,EAAAA,GAlBxB9D,EAoBwBmC,EAA1ByB,QAAA,2BApBsBzC,KAAK,WAsBvBA,EAAqB,IAACsB,SAEjBG,EAAOF,KAAZ,YAA+B,GAA/BF,KAAA,4BAAAG,YAAA,4BAnBRxB,EAAKyB,OAAO,WAAYpB,EAAkBqB,OAsB7B9C,EAAAA,OAAaC,UAAU8B,GACpBlB,EADoBgC,OAAA,qBAAAZ,GAElB/B,EAAAA,OAAAA,KAAAA,EAAAA,IAFdkB,EAAAyB,OAAA,cAAA5C,EAAA,gBAOO,IAAA8E,EAAAhB,EAAA5B,SAAA,qBAAAA,SAAA,mBAAAwC,IAAA,SAAA1D,EAAAgE,GAAA,IAAAhF,EAAAF,EAAAkF,GAAA7D,KAAA,WAGO,OAHP,IAAA8D,SAAA,kBAAAC,OAAAlF,EAAAW,KAAA,cAAAuE,OAAAlF,EAAAa,GAAA,OAAA,CAAAb,EAAAa,MAIUe,MAJVzB,QAAAgF,IAAAL,GAAA1E,KAAA,SAAAH,GAOM,IAAAW,EAAAsC,EAAAA,OAAY,GAAAY,EAAA3C,KAAA,SAEPgC,EAASiC,MAAKlC,EAAS/B,MAA7B,QAGUkE,EAAMlC,OAAhBvC,EAAA,KAvBRO,EAAKyB,OAAO,UAAWhC,EAAI,IAyBPO,EAAMyB,OAAA,aAAAhC,EAAA,QAGrBX,EAAAF,EAAAC,EAAA,CAAA,CAjBFY,KAAAA,EAmBOX,OAAAA,KAGTkB,EAAAyB,OAAA,SAAA0C,KAAAC,UAAAtF,IAvCTH,EAAAmD,KAAA,CAtBJuC,OAAA,OAyCYC,IAAKjE,EAAkBiE,IAwBvCC,SAAA,OAtBgB5C,aAAa,EAuB7BO,aAAA,EAC4BS,KAAAA,EAC5Bd,QAAA,SAAAE,GAzEJ,GAAAA,EAAAF,SAAAE,EAAA/B,KAAA,CANJ,IAAAgC,EAAArD,EAAAoD,EAAA/B,MAmFsBiC,EAAiCD,EAASd,SAAE,qBAAAH,SAAA,kBAAAsB,KAAA,oBAE7BM,EAAAuB,MAAAlC,GAGjCC,EAAA,IAEiBhC,GAAAkC,QAAjBC,eAAAH,KAKsBuC,SAAA,WAFtBjC,EAAAD,QAVJtB,EAAAyD,WAAA,YAAApD,KAAA,4BAAAqB,SAAA,iCArD2B,GA0Ed,MACO,IAAK,UA6IdC,EA5I+BA,GAyI1CG,QAAA,WAMAH,EAAeqB,cAlJFlD,EAAA4D,GAAA,QAAA,gCAAA,SAAAxD,GAUT,IAASF,EAACrC,EAAIyC,MACR6B,EAAFjC,EAAAyB,QAAA,4BACHkC,EAAA3D,EAAA4D,SAAA,gCAGLhE,EAAAA,kBAEWb,EAFkB2C,SAAA,6BAGnBiC,EAHmBjC,SAAA,kCAKlBH,EAAAsC,IAACC,QAAD,WACHlE,EAAAA,YAAyB,6BAEzB+D,EAAWI,YAAgB,sCAI9BjE,EAAA4D,GAAA,QAAA,+BAAA,SAAAxD,GAZLA,EAAA+B,oBAkBM+B,EAAWN,GAAGpE,CAErB2E,MAAQ,WAAa,IAAXD,EAAAA,EAAAA,MACjBxB,EADqD0B,EAAKzC,QAAA,aAC1DzC,KAAA,QAEoBF,EAApBoF,EAAAC,MAEMrE,EAAYE,MAASyB,EACdyC,EAAGpE,KAAUd,wBAA1BoF,KAAAtF,IAEMc,MAAAA,SAAAA,GACOM,EAAA+B,oBAIRxB,oBAEDb,EAAQyE,SAAoB,CAC3B5D,YAAa5C,wBACb4C,QAAO,GAlCA6D,KAAM,IAoCdnE,OAAY,uBACVM,MAAO,SAAAqD,EAAZS,GACK9D,EAAqBN,KAAAA,0BAA1BqE,OAAAD,EAAAE,OAAAD,SAAA,GAjCevF,GAAGkC,QAAQ4C,aAAcpG,EAAE,mBAAoBmC,KAqCxD4E,KAAE,WACHvF,GAAAA,QAAgBmE,gBAFf3F,EAAA,mBAAAmC,OAMNd,EANM2F,mBAQL,IAAI5D,EAASF,EAAWE,KAAAA,yBAAgBhB,SAAA,UACjCiB,EAAcD,EAApB,iBAAAzB,EAAA,iBAAA,gBAGAM,EAAAA,QAAAA,CAAAA,YAAAA,IAAoBa,GAAAA,iBAApB,SAAAP,GAnCHqB,EAAUD,QAsCNrC,IAAAA,EAAGkC,EAAAA,EAAAA,QACHyD,EAAA5E,EAAAD,SAAA,WAAAgD,OAAA7C,EAAA2E,OAAA7F,KAAAN,GAAA,OACDoB,EAAAE,EAAAyB,QAAA,2BACD5D,EAlBKiC,EAAAd,KAAA,WAmBNwE,EAAUoB,EAAA5F,KAAA,YACTgB,EAAoBF,EAApBC,SAAA,mBAAwD6D,SAAS,2BACjE5E,EAAA,IAAAsB,SAEFN,EA/CD4D,SAAA,4BAAApD,YAAA,4BAlPCxB,EAAAyB,OAAA,WAAAtB,EAAAuB,OAgQA1B,EAAKyB,OAAO,UAAWd,GAqCvBX,EAAAyB,OAASyB,qBAAsBlC,GAC3BhB,EAAMwD,OAAQ,KAAGb,EAAU3C,IAE3BgB,EAAAA,OAASoC,cAAYvE,EAAA,gBAGrB8D,GAAAxB,EAA8BiC,OAE9BI,EAAAA,OAASE,UAAYvC,EAAgB,KAAOqC,IAC/CxD,EAAAyB,OAAA,aAAAN,EAAA,KAAAS,QAGGe,EAAAA,KAAAA,CACIA,OAAAA,OADJ2B,IAAAnE,EAAAmE,IAGHC,SAAA,OAtCA5C,aAAa,EAwCdO,aAAStD,EACLoB,KAAMjB,EAEN8C,QAAIlC,SAAAA,GAEFT,GAAF6C,EAAeF,SAAAE,EAAI3C,KAAa,CAC5B,IAAML,EAAWJ,EAAAoD,EAAA/B,MACXd,EAAcJ,EAAQiC,SAAA,qBAAcA,SAAA,kBAAAsB,KAAA,oBAErCzB,EAFDa,OAAAO,GAIE9C,EAAKL,IACHoB,GAAAkC,QAAS3C,eAASJ,KAKtBT,SAAOS,WACHU,EAAK2E,WAAS9E,YAAAA,IAAgB,IAAImG,SAAlCC,OAAAnB,SAAA,4BAAAlC,SAAA,sCAQhBzC,GAAG+F,mBAAqB,SAAAtG,GACpB,IACMK,EADapB,EAAE,2BACMsH,OAAO,SAAC9G,EAAGkE,GAClC,OAAO3D,IAAOf,EAAE0E,GAAUrD,KAAK,WAAjB,KAKZlB,EAFaiB,EAAQgB,SAAS,mBAAmBA,SAAS,2BAA2BA,SAAS,sBAE1EwC,IAAI,SAACpE,EAAGC,GAC9B,IAAMuD,EAAYhE,EAAES,GACdqE,EAAed,EAAU3C,KAAK,QAC9B2D,EAAiBhB,EAAU5B,SAAS,qBAAqBA,SAAS,mBAAmBwC,IAAI,SAAC1D,EAAGgE,GAC/F,IAAMhF,EAAUF,EAAEkF,GAAO7D,KAAK,WAE9B,OAAO,IAAI8D,SAAJ,kBAAAC,OAAgClF,EAAQW,KAAxC,cAAAuE,OAAyDlF,EAAQa,GAAjE,OAAA,CAA2Eb,EAAQa,MAC3Fe,MAEH,OAAOzB,QAAQgF,IAAIL,GAAgB1E,KAAK,SAAAH,GACpC,OAAOE,QAAQkH,QAAS,CACpBzG,KAAMgE,EACN3E,OAAQA,QAGjB2B,MAEH,OAAOzB,QAAQgF,IAAIlF,GAAQG,KAAK,SAAAkH,GAC5B,OAAOnH,QAAQkH,QAAS,CACpB1G,KAAA,YAAAuE,OAAoBhE,EAAQC,KAAK,WAAW,gBAC5CN,GAAMA,EACNI,MAASlB,EAAamB,EAAQC,KAAK,WAAYmG,QAhX/D,CAoXG1H,OAAQC,SAAUW","file":"fields\\repeater\\scripts.min.js","sourcesContent":["\"use strict\";\r\n\r\n(function(window, document, $){\r\n    window.AO = window.AO || {};\r\n\r\n    $(() => {\r\n        const $repeaters = $('.jsAlchemyRepeaterField');\r\n\r\n        if( ! $repeaters[0] ) {\r\n            return;\r\n        }\r\n\r\n        const $document = $(document);\r\n        const addRepeateeData = AlchemyRepeatersData['add-repeatee'];\r\n        const cloneRepeateeData = AlchemyRepeatersData['clone-repeatee'];\r\n        const miscRepeaterData = AlchemyRepeatersData['misc'];\r\n        const currentUrl = new URL(window.location.href);\r\n\r\n        let pageID = currentUrl.searchParams.get('page');\r\n\r\n        if( ! pageID ) {\r\n            pageID = currentUrl.searchParams.get('post');\r\n        }\r\n\r\n        $repeaters.each((i, repeater) => {\r\n            const $repeater = $(repeater);\r\n            const $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\r\n\r\n            let repeateesCount = $repeateesContainer.children('.jsAlchemyRepeatee').length;\r\n\r\n            $repeater.on('click', '.jsAlchemyAddRepeatee', function(e){\r\n                e.stopPropagation();\r\n\r\n                const $trigger = $(this);\r\n                const $repeater = $trigger.closest('.jsAlchemyRepeaterField');\r\n                const alchemy = $repeater.data('alchemy');\r\n                const repeaterData = $trigger.data('repeater');\r\n                const $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\r\n                const data = new FormData();\r\n\r\n                $trigger.attr('disabled', true).next('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\r\n\r\n                data.append('_wpnonce', addRepeateeData.nonce);\r\n                data.append('page-id', pageID);\r\n                data.append('repeatees-number', ++repeateesCount);\r\n                data.append('id', alchemy['id']);\r\n                data.append('repeater-id', alchemy['repeater-id']);\r\n\r\n                if( repeaterData && repeaterData['type'] ) {\r\n                    data.append('type-id', repeaterData['type'].id);\r\n                    data.append('type-title', repeaterData['type'].title);\r\n                }\r\n\r\n                $.ajax({\r\n                    method: \"POST\",\r\n                    url: addRepeateeData.url,\r\n                    dataType: 'json',\r\n                    processData: false,\r\n                    contentType: false,\r\n                    data: data,\r\n                    success: response => {\r\n                        if( response.success && response.data ) {\r\n                            const $response = $(response.data);\r\n                            const $editors = $response.children('.repeatee__fields').children('.field--editor').find('.jsAlchemyEditor');\r\n\r\n                            $repeateesContainer.append($response);\r\n\r\n                            if( $editors[0] ) {\r\n                                AO.tinymce.create_editors( $editors );\r\n                            }\r\n                        }\r\n                    },\r\n                    complete: () => {\r\n                        $document.click();\r\n                        $trigger.removeAttr('disabled').next('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\r\n                    }\r\n                });\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeateeToolbar', function(e) {\r\n                e.stopPropagation();\r\n\r\n                $document.click();\r\n\r\n                const $toolbar = $(this);\r\n                const $repeatee = $toolbar.closest( '.repeatee' );\r\n                const $editorFields = $repeatee.children('.repeatee__fields').children('.field--editor');\r\n\r\n                if( $repeatee.hasClass('repeatee--expanded') ) {\r\n                    AO.tinymce.destroy_editors( $editorFields.find('.jsAlchemyEditor') );\r\n\r\n                    $repeatee.removeClass('repeatee--expanded');\r\n                    $editorFields.find('.wp-editor-tools').remove();\r\n                } else {\r\n                    AO.tinymce.create_editors( $editorFields.find('.jsAlchemyEditor') );\r\n\r\n                    $repeatee.addClass('repeatee--expanded');\r\n                }\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeateeRemove', function() {\r\n                const $toolbar = $(this);\r\n                const $parent = $toolbar.closest( '.repeatee' );\r\n\r\n                $parent.fadeOut(() => {\r\n                    $parent.remove();\r\n                });\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeateeAction', function(e) {\r\n                e.stopPropagation();\r\n\r\n                const $trigger = $(this);\r\n                const $repeatee = $trigger.closest( '.repeatee' );\r\n\r\n                switch( $trigger.data('action') ) {\r\n                    case 'hide' :\r\n                        handle_hide_repeatee( $trigger, $repeatee );\r\n                    break;\r\n                    case 'clone' :\r\n                        (() => {\r\n                            e.stopPropagation();\r\n\r\n                            const $trigger = $(this);\r\n                            const $repeater = $trigger.closest('.jsAlchemyRepeaterField');\r\n                            const alchemy = $repeater.data('alchemy');\r\n                            const data = new FormData();\r\n\r\n                            $trigger.attr('disabled', true).next('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\r\n\r\n                            data.append('_wpnonce', cloneRepeateeData.nonce);\r\n                            data.append('page-id', pageID);\r\n                            data.append('repeatees-number', ++repeateesCount);\r\n                            data.append('id', alchemy['id']);\r\n                            data.append('repeater-id', alchemy['repeater-id']);\r\n\r\n                            const repeateeFields = $repeatee.children('.repeatee__fields').children('.jsAlchemyField').map((k, field) => {\r\n                                const alchemy = $(field).data('alchemy');\r\n\r\n                                return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\r\n                            }).get()\r\n\r\n                            Promise.all(repeateeFields).then(values => {\r\n                                const meta = $.extend({}, $repeatee.data('meta'));\r\n\r\n                                meta.label = meta.label + ' copy';\r\n\r\n                                if( meta['title'] && meta['id'] ) {\r\n                                    data.append('type-id', meta['id']);\r\n                                    data.append('type-title', meta['title']);\r\n                                }\r\n\r\n                                values = correct_ids( alchemy, [{\r\n                                    'meta': meta,\r\n                                    'values': values\r\n                                }] )\r\n\r\n                                data.append('values', JSON.stringify(values));\r\n\r\n                                $.ajax({\r\n                                    method: \"POST\",\r\n                                    url: cloneRepeateeData.url,\r\n                                    dataType: 'json',\r\n                                    processData: false,\r\n                                    contentType: false,\r\n                                    data: data,\r\n                                    success: response => {\r\n                                        if( response.success && response.data ) {\r\n                                            const $response = $(response.data);\r\n                                            const $editors = $response.children('.repeatee__fields').children('.field--editor').find('.jsAlchemyEditor');\r\n\r\n                                            $repeatee.after($response);\r\n\r\n                                            if( $editors[0] ) {\r\n                                                AO.tinymce.create_editors( $editors );\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    complete: () => {\r\n                                        $document.click();\r\n                                        $trigger.removeAttr('disabled').next('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\r\n                                    }\r\n                                });\r\n                            });\r\n                        })();\r\n                    break;\r\n                    case 'delete' :\r\n                        handle_delete_repeatee( $repeatee );\r\n                    break;\r\n                }\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeaterTypeTrigger', function(e){\r\n                const $trigger = $(this);\r\n                const $parent = $trigger.closest('.repeater__add-from-type');\r\n                const $list = $trigger.siblings('.jsAlchemyRepeaterFieldTypes');\r\n\r\n                e.stopPropagation();\r\n\r\n                $parent.addClass('repeater__add-new--active');\r\n                $list.addClass('repeater__field-types--visible');\r\n\r\n                $document.one('click', function() {\r\n                    $parent.removeClass('repeater__add-new--active');\r\n                    $list.removeClass('repeater__field-types--visible');\r\n                });\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeaterFieldTypes', function(e){\r\n                e.stopPropagation();\r\n            });\r\n\r\n            $repeater.on({\r\n                'input': function() {\r\n                    const $input = $(this);\r\n                    const $repeatee = $input.closest( '.repeatee' );\r\n                    const metaData = $repeatee.data('meta');\r\n                    const value = $input.val();\r\n\r\n                    metaData.label = value;\r\n                    $input.prev('.jsRepeateeTitleText').text(value);\r\n                },\r\n                'click': e => {\r\n                    e.stopPropagation();\r\n                }\r\n            }, '.jsRepeateeTitle');\r\n\r\n            $repeateesContainer.sortable({\r\n                placeholder: \"repeatee--placeholder\",\r\n                opacity: 0.8,\r\n                axis: \"y\",\r\n                handle: \".jsRepeateeDndHandle\",\r\n                start: (event, ui) => {\r\n                    $repeateesContainer.find('.repeatee--placeholder').height(ui.helper.height() - 2);\r\n\r\n                    AO.tinymce.save_editors( $('.jsAlchemyEditor', $repeater) );\r\n                },\r\n                stop: () => {\r\n                    AO.tinymce.restore_editors( $('.jsAlchemyEditor', $repeater) );\r\n                }\r\n            });\r\n\r\n            $repeateesContainer.disableSelection();\r\n\r\n            const $select = $repeater.find('.jsAlchRepeaterSelect').children('select');\r\n            const placeholder = miscRepeaterData['add-from-type'] ? miscRepeaterData['add-from-type'] : 'Add from type';\r\n\r\n\t\t\t$select.select2({ placeholder }).on('select2:select', e => {\r\n\t\t\t\t$document.click();\r\n\r\n\t\t\t\tconst $trigger = $(e.target);\r\n\t\t\t\tconst option = $trigger.children(`[value=\"${e.params.data.id}\"]`);\r\n\t\t\t\tconst $repeater = $trigger.closest('.jsAlchemyRepeaterField');\r\n\t\t\t\tconst alchemy = $repeater.data('alchemy');\r\n\t\t\t\tconst repeaterData = option.data('repeater');\r\n\t\t\t\tconst $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\r\n\t\t\t\tconst data = new FormData();\r\n\r\n\t\t\t\t$trigger.siblings('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\r\n\r\n\t\t\t\tdata.append('_wpnonce', addRepeateeData.nonce);\r\n\t\t\t\tdata.append('page-id', pageID);\r\n\t\t\t\tdata.append('repeatees-number', ++repeateesCount);\r\n\t\t\t\tdata.append('id', alchemy['id']);\r\n\t\t\t\tdata.append('repeater-id', alchemy['repeater-id']);\r\n\r\n\t\t\t\tif( repeaterData && repeaterData['type'] ) {\r\n\t\t\t\t\tdata.append('type-id', repeaterData['type'].id);\r\n\t\t\t\t\tdata.append('type-title', repeaterData['type'].title);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\turl: addRepeateeData.url,\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\tprocessData: false,\r\n\t\t\t\t\tcontentType: false,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tsuccess: response => {\r\n\t\t\t\t\t\tif( response.success && response.data ) {\r\n\t\t\t\t\t\t\tconst $response = $(response.data);\r\n\t\t\t\t\t\t\tconst $editors = $response.children('.repeatee__fields').children('.field--editor').find('.jsAlchemyEditor');\r\n\r\n\t\t\t\t\t\t\t$repeateesContainer.append($response);\r\n\r\n\t\t\t\t\t\t\tif( $editors[0] ) {\r\n\t\t\t\t\t\t\t\tAO.tinymce.create_editors( $editors );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete: () => {\r\n\t\t\t\t\t\t$trigger.removeAttr('disabled').val(\"\").change().blur().siblings('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n        });\r\n    });\r\n\r\n    function handle_hide_repeatee( $trigger, $repeatee ) {\r\n        const metaData = $repeatee.data('meta');\r\n\r\n        $trigger.toggleClass('repeatee__btn--active');\r\n        $trigger.find('span').toggleClass('dashicons-visibility').toggleClass('dashicons-hidden');\r\n\r\n        $repeatee.removeAttr('style').toggleClass('repeatee--hidden');\r\n\r\n        metaData.visible = ( 'undefined' === typeof metaData.visible ) ? false : ! metaData.visible;\r\n    }\r\n\r\n    function handle_delete_repeatee( $repeatee ) {\r\n        $repeatee.fadeOut(() => {\r\n            $repeatee.remove();\r\n        });\r\n    }\r\n\r\n    function correct_ids( alchemy, values ) {\r\n        const hasTypes = typeof( alchemy['fields-data']['field-types'] ) !== 'undefined';\r\n\r\n        let neededTypeFields = alchemy['fields-data']['fields'];\r\n\r\n        $.each(values, (i, repeatee) => {\r\n            if( ! hasTypes ) {\r\n                $.each(repeatee.values, (k, value) => {\r\n                    value['id'] = neededTypeFields[k]['id'];\r\n                });\r\n            } else {\r\n                $.each(alchemy['fields-data']['field-types'], (l, item) => {\r\n                    if( item.type === repeatee.meta.id ) {\r\n                        neededTypeFields = item.fields\r\n                    }\r\n                });\r\n\r\n                $.each(repeatee.values, (k, value) => {\r\n                    value['id'] = neededTypeFields[k]['id'];\r\n                });\r\n            }\r\n        });\r\n\r\n        return values;\r\n    }\r\n\r\n    AO.get_repeater_value = id => {\r\n        const $repeaters = $('.jsAlchemyRepeaterField');\r\n        const $parent = $repeaters.filter((i, repeater) => {\r\n            return id === $(repeater).data('alchemy')['id'];\r\n        });\r\n\r\n        const $repeatees = $parent.children('.field__content').children('.jsAlchemyRepeaterItems').children('.jsAlchemyRepeatee');\r\n\r\n        const values = $repeatees.map((i, repeatee) => {\r\n            const $repeatee = $(repeatee);\r\n            const repeateeMeta = $repeatee.data('meta');\r\n            const repeateeFields = $repeatee.children('.repeatee__fields').children('.jsAlchemyField').map((k, field) => {\r\n                const alchemy = $(field).data('alchemy');\r\n\r\n                return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\r\n            }).get()\r\n\r\n            return Promise.all(repeateeFields).then(values => {\r\n                return Promise.resolve( {\r\n                    meta: repeateeMeta,\r\n                    values: values\r\n                } );\r\n            });\r\n        }).get();\r\n\r\n        return Promise.all(values).then(valuesData => {\r\n            return Promise.resolve( {\r\n                'type': `repeater:${$parent.data('alchemy')['repeater-id']}`,\r\n                'id': id,\r\n                'value': correct_ids( $parent.data('alchemy'), valuesData )\r\n            } );\r\n        });\r\n    };\r\n})(window, document, jQuery);\r\n"]}