{"version":3,"sources":["fields/repeater/scripts.js"],"names":["window","document","$","Promise","values","alchemy","neededTypeFields","each","i","repeatee","hasTypes","l","item","type","meta","id","fields","k","value","jQuery","AO","$repeaters","addRepeateeData","AlchemyRepeatersData","cloneRepeateeData","miscRepeaterData","currentUrl","searchParams","get","href","pageID","$repeateesContainer","repeateesCount","$repeater","children","$trigger","length","data","e","repeaterData","this","next","FormData","attr","removeClass","append","nonce","processData","title","success","ajax","response","$response","$document","repeater","trigger","complete","$toolbar","closest","removeAttr","addClass","$repeatee","stopPropagation","hasClass","on","handle_hide_repeatee","$parent","fadeOut","remove","_this","metaData","$repeatees","map","toggleClass","repeateeFields","visible","label","correct_ids","JSON","field","Function","concat","all","then","after","stringify","method","url","dataType","contentType","click","repeateeMeta","sortable","siblings","$list","event","tinymce","save_editors","disableSelection","$select","placeholder","input","$input","val","option","text","start","ui","find","height","helper","restore_editors","target","params","handle_delete_repeatee","change","blur","get_repeater_value","filter","resolve","valuesData"],"mappings":"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","file":"fields\\repeater\\scripts.min.js","sourcesContent":["\"use strict\";\r\n\r\n(function(window, document, $){\r\n    window.AO = window.AO || {};\r\n\r\n    $(() => {\r\n        const $repeaters = $('.jsAlchemyRepeaterField');\r\n\r\n        if( ! $repeaters[0] ) {\r\n            return;\r\n        }\r\n\r\n        const $document = $(document);\r\n        const addRepeateeData = AlchemyRepeatersData['add-repeatee'];\r\n        const cloneRepeateeData = AlchemyRepeatersData['clone-repeatee'];\r\n        const miscRepeaterData = AlchemyRepeatersData['misc'];\r\n        const currentUrl = new URL(window.location.href);\r\n\r\n        let pageID = currentUrl.searchParams.get('page');\r\n\r\n        if( ! pageID ) {\r\n            pageID = currentUrl.searchParams.get('post');\r\n        }\r\n\r\n        $repeaters.each((i, repeater) => {\r\n            const $repeater = $(repeater);\r\n            const $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\r\n\r\n            let repeateesCount = $repeateesContainer.children('.jsAlchemyRepeatee').length;\r\n\r\n            $repeater.on('click', '.jsAlchemyAddRepeatee', function(e){\r\n                e.stopPropagation();\r\n\r\n                const $trigger = $(this);\r\n                const $repeater = $trigger.closest('.jsAlchemyRepeaterField');\r\n                const alchemy = $repeater.data('alchemy');\r\n                const repeaterData = $trigger.data('repeater');\r\n                const $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\r\n                const data = new FormData();\r\n\r\n                $trigger.attr('disabled', true).next('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\r\n\r\n                data.append('_wpnonce', addRepeateeData.nonce);\r\n                data.append('page-id', pageID);\r\n                data.append('repeatees-number', ++repeateesCount);\r\n                data.append('id', alchemy['id']);\r\n                data.append('repeater-id', alchemy['repeater-id']);\r\n\r\n                if( repeaterData && repeaterData['type'] ) {\r\n                    data.append('type-id', repeaterData['type'].id);\r\n                    data.append('type-title', repeaterData['type'].title);\r\n                }\r\n\r\n                $.ajax({\r\n                    method: \"POST\",\r\n                    url: addRepeateeData.url,\r\n                    dataType: 'json',\r\n                    processData: false,\r\n                    contentType: false,\r\n                    data: data,\r\n                    success: response => {\r\n                        if( response.success && response.data ) {\r\n                            const $response = $(response.data);\r\n\r\n                            $repeateesContainer.append($response);\r\n\r\n                            $document.trigger('alch_repeatee_added', {\r\n                                repeater: $repeater,\r\n                                repeatee: $response,\r\n                            });\r\n                        }\r\n                    },\r\n                    complete: () => {\r\n                        $document.click();\r\n                        $trigger.removeAttr('disabled').next('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\r\n                    }\r\n                });\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeateeToolbar', function(e) {\r\n                e.stopPropagation();\r\n\r\n                $document.click();\r\n\r\n                const $toolbar = $(this);\r\n                const $repeatee = $toolbar.closest( '.repeatee' );\r\n\r\n                if( $repeatee.hasClass('repeatee--expanded') ) {\r\n                    $repeatee.removeClass('repeatee--expanded');\r\n\r\n                    $document.trigger('alch_repeatee_closed', {\r\n                        repeater: $repeater,\r\n                        repeatee: $repeatee,\r\n                    });\r\n                } else {\r\n                    $repeatee.addClass('repeatee--expanded');\r\n\r\n                    $document.trigger('alch_repeatee_opened', {\r\n                        repeater: $repeater,\r\n                        repeatee: $repeatee,\r\n                    });\r\n                }\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeateeRemove', function() {\r\n                const $toolbar = $(this);\r\n                const $parent = $toolbar.closest( '.repeatee' );\r\n\r\n                $parent.fadeOut(() => {\r\n                    $parent.remove();\r\n                });\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeateeAction', function(e) {\r\n                e.stopPropagation();\r\n\r\n                const $trigger = $(this);\r\n                const $repeatee = $trigger.closest( '.repeatee' );\r\n\r\n                switch( $trigger.data('action') ) {\r\n                    case 'hide' :\r\n                        handle_hide_repeatee( $trigger, $repeatee );\r\n                    break;\r\n                    case 'clone' :\r\n                        (() => {\r\n                            e.stopPropagation();\r\n\r\n                            const $trigger = $(this);\r\n                            const $repeater = $trigger.closest('.jsAlchemyRepeaterField');\r\n                            const alchemy = $repeater.data('alchemy');\r\n                            const data = new FormData();\r\n\r\n                            $trigger.attr('disabled', true).next('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\r\n\r\n                            data.append('_wpnonce', cloneRepeateeData.nonce);\r\n                            data.append('page-id', pageID);\r\n                            data.append('repeatees-number', ++repeateesCount);\r\n                            data.append('id', alchemy['id']);\r\n                            data.append('repeater-id', alchemy['repeater-id']);\r\n\r\n                            const repeateeFields = $repeatee.children('.repeatee__fields').children('.jsAlchemyField').map((k, field) => {\r\n                                const alchemy = $(field).data('alchemy');\r\n\r\n                                return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\r\n                            }).get()\r\n\r\n                            Promise.all(repeateeFields).then(values => {\r\n                                const meta = $.extend({}, $repeatee.data('meta'));\r\n\r\n                                meta.label = meta.label ? `${meta.label} copy` : '';\r\n\r\n                                if( meta['title'] && meta['id'] ) {\r\n                                    data.append('type-id', meta['id']);\r\n                                    data.append('type-title', meta['title']);\r\n                                }\r\n\r\n                                values = correct_ids( alchemy, [{\r\n                                    'meta': meta,\r\n                                    'values': values\r\n                                }] )\r\n\r\n                                data.append('values', JSON.stringify(values));\r\n\r\n                                $.ajax({\r\n                                    method: \"POST\",\r\n                                    url: cloneRepeateeData.url,\r\n                                    dataType: 'json',\r\n                                    processData: false,\r\n                                    contentType: false,\r\n                                    data: data,\r\n                                    success: response => {\r\n                                        if( response.success && response.data ) {\r\n                                            const $response = $(response.data);\r\n\r\n                                            $repeatee.after($response);\r\n\r\n                                            $document.trigger('alch_repeatee_added', {\r\n                                                repeater: $repeater,\r\n                                                repeatee: $response,\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                    complete: () => {\r\n                                        $document.click();\r\n                                        $trigger.removeAttr('disabled').next('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\r\n                                    }\r\n                                });\r\n                            });\r\n                        })();\r\n                    break;\r\n                    case 'delete' :\r\n                        handle_delete_repeatee( $repeatee );\r\n                    break;\r\n                }\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeaterTypeTrigger', function(e){\r\n                const $trigger = $(this);\r\n                const $parent = $trigger.closest('.repeater__add-from-type');\r\n                const $list = $trigger.siblings('.jsAlchemyRepeaterFieldTypes');\r\n\r\n                e.stopPropagation();\r\n\r\n                $parent.addClass('repeater__add-new--active');\r\n                $list.addClass('repeater__field-types--visible');\r\n\r\n                $document.one('click', function() {\r\n                    $parent.removeClass('repeater__add-new--active');\r\n                    $list.removeClass('repeater__field-types--visible');\r\n                });\r\n            });\r\n\r\n            $repeater.on('click', '.jsAlchemyRepeaterFieldTypes', function(e){\r\n                e.stopPropagation();\r\n            });\r\n\r\n            $repeater.on({\r\n                'input': function() {\r\n                    const $input = $(this);\r\n                    const $repeatee = $input.closest( '.repeatee' );\r\n                    const metaData = $repeatee.data('meta');\r\n                    const value = $input.val();\r\n\r\n                    metaData.label = value;\r\n                    $input.prev('.jsRepeateeTitleText').text(value);\r\n                },\r\n                'click': e => {\r\n                    e.stopPropagation();\r\n                }\r\n            }, '.jsRepeateeTitle');\r\n\r\n            $repeateesContainer.sortable({\r\n                placeholder: \"repeatee--placeholder\",\r\n                opacity: 0.8,\r\n                axis: \"y\",\r\n                handle: \".jsRepeateeDndHandle\",\r\n                start: (event, ui) => {\r\n                    $repeateesContainer.find('.repeatee--placeholder').height(ui.helper.height() - 2);\r\n\r\n                    AO.tinymce.save_editors( $('.jsAlchemyEditor', $repeater) );\r\n                },\r\n                stop: () => {\r\n                    AO.tinymce.restore_editors( $('.jsAlchemyEditor', $repeater) );\r\n                }\r\n            });\r\n\r\n            $repeateesContainer.disableSelection();\r\n\r\n            const $select = $repeater.find('.jsAlchRepeaterSelect').children('select');\r\n            const placeholder = miscRepeaterData['add-from-type'] ? miscRepeaterData['add-from-type'] : 'Add from type';\r\n\r\n\t\t\t$select.select2({ placeholder }).on('select2:select', e => {\r\n\t\t\t\t$document.click();\r\n\r\n\t\t\t\tconst $trigger = $(e.target);\r\n\t\t\t\tconst option = $trigger.children(`[value=\"${e.params.data.id}\"]`);\r\n\t\t\t\tconst $repeater = $trigger.closest('.jsAlchemyRepeaterField');\r\n\t\t\t\tconst alchemy = $repeater.data('alchemy');\r\n\t\t\t\tconst repeaterData = option.data('repeater');\r\n\t\t\t\tconst $repeateesContainer = $repeater.children('.field__content').children('.jsAlchemyRepeaterItems');\r\n\t\t\t\tconst data = new FormData();\r\n\r\n\t\t\t\t$trigger.siblings('.jsAlchemyRepeaterLoader').removeClass('alchemy__spinner--hidden');\r\n\r\n\t\t\t\tdata.append('_wpnonce', addRepeateeData.nonce);\r\n\t\t\t\tdata.append('page-id', pageID);\r\n\t\t\t\tdata.append('repeatees-number', ++repeateesCount);\r\n\t\t\t\tdata.append('id', alchemy['id']);\r\n\t\t\t\tdata.append('repeater-id', alchemy['repeater-id']);\r\n\r\n\t\t\t\tif( repeaterData && repeaterData['type'] ) {\r\n\t\t\t\t\tdata.append('type-id', repeaterData['type'].id);\r\n\t\t\t\t\tdata.append('type-title', repeaterData['type'].title);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\turl: addRepeateeData.url,\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\tprocessData: false,\r\n\t\t\t\t\tcontentType: false,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tsuccess: response => {\r\n\t\t\t\t\t\tif( response.success && response.data ) {\r\n\t\t\t\t\t\t\tconst $response = $(response.data);\r\n\r\n\t\t\t\t\t\t\t$repeateesContainer.append($response);\r\n\r\n                            $document.trigger('alch_repeatee_added', {\r\n                                repeater: $repeater,\r\n                                repeatee: $response,\r\n                            });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete: () => {\r\n\t\t\t\t\t\t$trigger.removeAttr('disabled').val(\"\").change().blur().siblings('.jsAlchemyRepeaterLoader').addClass('alchemy__spinner--hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n        });\r\n    });\r\n\r\n    function handle_hide_repeatee( $trigger, $repeatee ) {\r\n        const metaData = $repeatee.data('meta');\r\n\r\n        $trigger.toggleClass('repeatee__btn--active');\r\n        $trigger.find('span').toggleClass('dashicons-visibility').toggleClass('dashicons-hidden');\r\n\r\n        $repeatee.removeAttr('style').toggleClass('repeatee--hidden');\r\n\r\n        metaData.visible = ( 'undefined' === typeof metaData.visible ) ? false : ! metaData.visible;\r\n    }\r\n\r\n    function handle_delete_repeatee( $repeatee ) {\r\n        $repeatee.fadeOut(() => {\r\n            $repeatee.remove();\r\n        });\r\n    }\r\n\r\n    function correct_ids( alchemy, values ) {\r\n        const hasTypes = typeof( alchemy['fields-data']['field-types'] ) !== 'undefined';\r\n\r\n        let neededTypeFields = alchemy['fields-data']['fields'];\r\n\r\n        $.each(values, (i, repeatee) => {\r\n            if( ! hasTypes ) {\r\n                $.each(repeatee.values, (k, value) => {\r\n                    value['id'] = neededTypeFields[k]['id'];\r\n                });\r\n            } else {\r\n                $.each(alchemy['fields-data']['field-types'], (l, item) => {\r\n                    if( item.type === repeatee.meta.id ) {\r\n                        neededTypeFields = item.fields\r\n                    }\r\n                });\r\n\r\n                $.each(repeatee.values, (k, value) => {\r\n                    value['id'] = neededTypeFields[k]['id'];\r\n                });\r\n            }\r\n        });\r\n\r\n        return values;\r\n    }\r\n\r\n    AO.get_repeater_value = id => {\r\n        const $repeaters = $('.jsAlchemyRepeaterField');\r\n        const $parent = $repeaters.filter((i, repeater) => {\r\n            return id === $(repeater).data('alchemy')['id'];\r\n        });\r\n\r\n        const $repeatees = $parent.children('.field__content').children('.jsAlchemyRepeaterItems').children('.jsAlchemyRepeatee');\r\n\r\n        const values = $repeatees.map((i, repeatee) => {\r\n            const $repeatee = $(repeatee);\r\n            const repeateeMeta = $repeatee.data('meta');\r\n            const repeateeFields = $repeatee.children('.repeatee__fields').children('.jsAlchemyField').map((k, field) => {\r\n                const alchemy = $(field).data('alchemy');\r\n\r\n                return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\r\n            }).get()\r\n\r\n            return Promise.all(repeateeFields).then(values => {\r\n                return Promise.resolve( {\r\n                    meta: repeateeMeta,\r\n                    values: values\r\n                } );\r\n            });\r\n        }).get();\r\n\r\n        return Promise.all(values).then(valuesData => {\r\n            return Promise.resolve( {\r\n                'type': `repeater:${$parent.data('alchemy')['repeater-id']}`,\r\n                'id': id,\r\n                'value': correct_ids( $parent.data('alchemy'), valuesData )\r\n            } );\r\n        });\r\n    };\r\n})(window, document, jQuery);\r\n"]}