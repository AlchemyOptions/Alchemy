{"version":3,"sources":["fields/button_group/scripts.js"],"names":["window","$","AO","$btnGroups","each","el","$choices","$btnGroup","isMultiple","data","multiple","on","this","removeClass","filter","i","is","$btn","toggleClass","get_button_group_value","id","$el","concat","value","find","map","checkbox","get","resolve","type","jQuery"],"mappings":"AAAA,cAEA,SAACA,EAAAC,GACGD,EAAAE,GAAYF,EAAAE,IAAZ,GAEA,IAAMC,EAAaF,EAAE,yBAGjBE,EAAA,IACIA,EAAeC,KAAKC,SAAAA,EAApBA,GACMC,IAAQC,EAAKN,EAAAI,GACbG,EAAaD,EAAAA,8BAAnBA,GAEAC,EAAsBD,EAAAE,KAAA,WAAtBC,SAAAH,EAAUI,GAAG,QAAS,8BAA+B,WAG3CH,IAAAA,EAAaP,EAAAW,MAEAP,GACZQ,EAAYC,OAAA,SAAAC,EAAAV,GAClB,OAAAJ,EAAAI,GAAAW,GAAAC,KADMJ,YAAY,kBAX3BI,EAAAC,YAAA,sBAsBAhB,GAAAiB,uBAAA,SAAAC,GAFA,IAAMC,EAAMpB,EAAC,IAAAqB,OAAKF,IAKTG,EAAOC,GAUZ,OAPGD,EAHKF,EAARZ,KAAA,WAAAC,SAGGW,EAAAG,KAAA,mBAAAC,IAAA,SAAAV,EAAAW,GACKL,OAASpB,EAAAyB,GAAAjB,KAAT,WACXkB,MAEcC,EAAAA,KAAS,mBAAAnB,KAAA,SAGXc,QAAAA,QAAAA,CAHbM,KAAA,eAbJT,GAAAA,EAmBOU,MA5CXP,KAAA,CA4CGvB,OAAQ8B","file":"fields\\button_group\\scripts.min.js","sourcesContent":["\"use strict\";\n\n(function(window, $) {\n    window.AO = window.AO || {};\n\n    const $btnGroups = $('.jsAlchemyButtonGroup');\n\n    if( $btnGroups[0] ) {\n        $btnGroups.each((i, el) => {\n            const $btnGroup = $(el);\n            const $choices = $('.jsAlchemyButtonGroupChoice', $btnGroup);\n            const isMultiple = $btnGroup.data('alchemy').multiple;\n\n            $btnGroup.on('click', '.jsAlchemyButtonGroupChoice', function() {\n                const $btn = $(this);\n\n                if( ! isMultiple ) {\n                    $choices.filter((i, el) => {\n                        return ! $(el).is($btn)\n                    }).removeClass('button-primary');\n                }\n\n                $btn.toggleClass('button-primary');\n            });\n        });\n    }\n\n    AO.get_button_group_value = id => {\n        const $el = $(`#${id}`);\n\n        let value = '';\n\n        if( $el.data('alchemy').multiple ) {\n            value = $el.find('.button-primary').map((i, checkbox) => {\n                return $(checkbox).data('value');\n            }).get();\n        } else {\n            value = $el.find('.button-primary').data('value');\n        }\n\n        return Promise.resolve( {\n            'type': 'button_group',\n            'id': id,\n            'value': value\n        } );\n    };\n})(window, jQuery);"]}