{"version":3,"sources":["fields/upload/scripts.js"],"names":["window","$","AO","$uploaders","each","el","$results","on","file_frame","$uploader","$uploadButton","data","wp","media","frames","title","uploadStrings","button","text","multiple","json","state","get","first","toJSON","trim","url","length","type","html","src","thumbnail","sizes","full","alt","caption","$input","filename","addClass","results","id","icon","concat","filesizeHumanReadable","val","open","jQuery","removeClass","get_upload_value","Promise","resolve","value"],"mappings":"AAAA,cAEA,SAACA,EAAAC,GACGD,EAAAE,GAAYF,EAAAE,IAAZ,GAEA,IAAMC,EAAaF,EAAE,sBAGjBE,EAAA,IACIA,EAAeC,KAAKC,SAAAA,EAApBA,GACMC,IAQIC,EACDC,EATKC,EAAKR,EAAAI,GACPC,EAAKL,EAAA,4BAAjBQ,GACMC,EAAiBT,EAAC,0BAA2BQ,GAG/CD,EAFkBE,EAAAA,0BAAtBD,GAEAE,KAAA,WAOQF,EAAAF,GAAA,QAAA,0BAAA,WACHC,IAEkDA,EAAAI,GAAAC,MAAAC,OAAAN,WAAAI,GAAAC,MAAA,CAKxCE,MALwCC,EAAAD,MAMrCE,OAAA,CANdC,KAAAF,EAAAE,MAUWV,MAAU,SAJjBW,UAAU,KAQTZ,GAAA,SAAA,WAGW,GAPZa,EAAOZ,EAAWa,QAAQC,IAAI,aAAaC,QAAQC,WAO/BvB,EAAAwB,KAADL,EAAYM,IAAAC,QAA3B,GAAA,GAAA,UAAAP,EAAAQ,KAMWR,EAAXS,KAAA5B,EAAA,UAAA,CACQ6B,IAAYV,EAAKQ,MAAjBG,UAAyBX,EAAYA,MAA1CW,UAAsDL,IAAAN,EAAAY,MAAAC,KAAAP,IAEpDQ,IAACd,EAADe,QAAYpB,MAAAK,EAAAL,SAKLqB,EAAKhB,IAAKiB,EAAAA,SANtB,GAAA,UAAAjB,EAAAQ,MAAA,UAAAR,EAAAQ,KAAA,CAUSU,IAASC,EAAA,CACFC,EAAhB,UAAA,CACHV,IAAAV,EAAAqB,KA5BL1B,MAAAK,EAAAiB,WAhBJpC,EAAA,UAAA,CAkDsB4B,KAAA,GAAAa,OAAAtB,EAAAiB,SAAA,sCAAAK,OAAgCtB,EAAAuB,sBAAhC,eA5D1BrC,EAAAgC,SAAA,2BAAAT,KAAAU,GAiEHH,EAAAQ,IAAAxB,EAAAoB,OArDehC,EAAWqC,SAwDvBpC,EAAAF,GAAA,QAAA,yBAAA,WADJ6B,EAAAQ,IAAA,IAOOE,EAhFXC,YAAA,2BAAAlB,KAAA,QAyEI3B,GAAG8C,iBAAmB,SAAAR,GAClB,OAAOS,QAAQC,QAAS,CACpBtB,KAAQ,SACRY,GAAMA,EACNW,MAASlD,EAAC,IAAAyC,OAAKF,IAAMI,SA7EjC,CAgFG5C,OAAQ8C","file":"fields\\upload\\scripts.min.js","sourcesContent":["\"use strict\";\n\n(function(window, $) {\n    window.AO = window.AO || {};\n\n    const $uploaders = $('.jsAlchemyUploader');\n\n    if( $uploaders[0] ) {\n        $uploaders.each((i, el) => {\n            const $uploader = $(el);\n            const $results = $('.jsAlchemyUploaderResults', $uploader);\n            const $input = $('.jsAlchemyUploaderInput', $uploader);\n            const $uploadButton = $('.jsAlchemyUploadTrigger', $uploader);\n            const uploadStrings = $uploadButton.data('strings');\n\n            let file_frame;\n            let json;\n\n            $uploader.on('click', '.jsAlchemyUploadTrigger', () => {\n                if ( file_frame ) {\n                    file_frame.open();\n\n                    return;\n                }\n\n                file_frame = wp.media.frames.file_frame = wp.media({\n                    title: uploadStrings.title,\n                    button: {\n                        text: uploadStrings.text\n                    },\n                    frame: 'select',\n                    multiple: false\n                });\n\n                file_frame.on( 'select', () => {\n                    json = file_frame.state().get('selection').first().toJSON();\n\n                    if ( 0 > $.trim( json.url.length ) ) {\n                        return;\n                    }\n\n                    if( 'image' === json.type ) {\n                        $results.html($('<img />', {\n                            src: json.sizes.thumbnail ? json.sizes.thumbnail.url : json.sizes.full.url,\n                            alt: json.caption,\n                            title: json.title\n                        }));\n\n                        $input.val(json.id);\n                    } else if ( 'video' === json.type || 'audio' === json.type ) {\n                        const results = [\n                            $('<img />', {\n                                src: json.icon,\n                                title: json.filename\n                            }),\n                            $('<div />', {\n                                html: `${json.filename} <span class=\"alchemy__filesize\">(${json.filesizeHumanReadable})</span>`\n                            })\n                        ];\n\n                        $results.addClass('field__results--visible').html(results);\n                        $input.val(json.id);\n                    }\n                });\n\n                file_frame.open();\n            });\n\n            $uploader.on('click', '.jsAlchemyUploadRemove', () => {\n                $input.val('');\n                $results.removeClass('field__results--visible').html('');\n            });\n        });\n    }\n\n    AO.get_upload_value = id => {\n        return Promise.resolve( {\n            'type': 'upload',\n            'id': id,\n            'value': $(`#${id}`).val()\n        } );\n    };\n})(window, jQuery);"]}